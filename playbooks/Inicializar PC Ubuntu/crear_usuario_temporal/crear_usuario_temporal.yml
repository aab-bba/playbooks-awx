- name: Añadir usuario temporal con sudo
  hosts: pendientes
  gather_facts: no
  become: false

  vars:
    tarea_1: "Tarea 1 - Comprobar acceso sudo"
    tarea_2: "Tarea 2 - Crear usuario temporal"
    playbook_nombre: "crear_usuario_temporal"

  tasks:
    - name: Tarea 0 - Generar timestamp único para esta ejecución
      set_fact:
        playbook_id: "{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"
      run_once: true

    - name: Tarea 1.1 - Verificar acceso sudo sin contraseña
      command: sudo -n true
      become: true
      register: resultado_tarea_1
      ignore_errors: true
      ignore_unreachable: true

    - name: Tarea 1.2 - Definir mensaje de ayuda si la tarea 1 falla
      set_fact:
        help_message_1: >
          Instala openssh-server. Ejecuta localmente:
            sudo apt-get update
            sudo apt-get install openssh-server
            echo '{{ ansible_user }} ALL=(ALL) NOPASSWD: ALL' | sudo tee /etc/sudoers.d/{{ ansible_user }}
            sudo usermod -s /bin/bash {{ ansible_user }}
        is_ok_1: 0
      when: resultado_tarea_1.unreachable | default(false) or
            (resultado_tarea_1.rc is defined and resultado_tarea_1.rc != 0)

    - name: Tarea 1.3 - Registrar resultado tarea 1 en BBDD
      community.mysql.mysql_query:
        login_host: "{{ db_host }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
        login_db: "{{ db_name }}"
        query: >
          INSERT INTO {{ db_table }} (
            host_id, playbook, playbook_uid, task_name, is_ok, task_message, help_message, created, modified
          ) VALUES (
            {{ hostvars[inventory_hostname].equipo_id | default('NULL') }},
            '{{ playbook_nombre }}',
            '{{ playbook_id }}',
            '{{ tarea_1 }}',
            {{ is_ok_1 | default(1) }},
            '{{ resultado_tarea_1 | to_json | replace("'", "''") }}',
            '{{ help_message_1 | default("") | replace("'", "''") }}',
            NOW(),
            NOW()
          );
      delegate_to: localhost
      ignore_errors: false


    - name: Tarea 2.1 - Crear usuario temporal
      ansible.builtin.user:
        name: ansible_temp
        password: "{{ ansible_temp_password  | password_hash('sha512') }}"
        shell: /bin/bash
        groups: sudo
        append: yes
        state: present
      become: true
      register: resultado_tarea_2
      ignore_errors: true
      ignore_unreachable: true

    - name: Tarea 2.2 - Definir mensaje de ayuda si la tarea 2 falla
      set_fact:
        help_message_2: "Error al crear el usuario ansible_temp. Verifica permisos, existencia del usuario o problemas con el paquete sudo."
        is_ok_2: 0
      when: resultado_tarea_2.unreachable | default(false) or
            (resultado_tarea_2.rc is defined and resultado_tarea_2.rc != 0)

    - name: Tarea 2.3 - Registrar resultado tarea 2 en BBDD
      community.mysql.mysql_query:
        login_host: "{{ db_host }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
        login_db: "{{ db_name }}"
        query: >
          INSERT INTO {{ db_table }} (
            host_id, playbook, playbook_uid, task_name, is_ok, task_message, help_message, created, modified
          ) VALUES (
            {{ hostvars[inventory_hostname].equipo_id | default('NULL') }},
            '{{ playbook_nombre }}',
            '{{ playbook_id }}',
            '{{ tarea_2 }}',
            {{ is_ok_2 | default(1) }},
            '{{ resultado_tarea_2 | to_json | replace("'", "''") }}',
            '{{ help_message_2 | default("") | replace("'", "''") }}',
            NOW(),
            NOW()
          );
      delegate_to: localhost
      ignore_errors: false