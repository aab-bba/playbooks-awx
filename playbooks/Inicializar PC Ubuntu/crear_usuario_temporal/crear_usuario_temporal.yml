---
- name: Añadir usuario temporal con sudo
  hosts: pendientes
  gather_facts: no
  become: false

  vars:
    tarea_1: "Recolectar datos del sistema"
    tarea_2: "Crear usuario temporal"
    playbook_nombre: "crear_usuario_temporal"

  tasks:
    - name: Generar timestamp único para esta ejecución
      set_fact:
        playbook_id: "{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"
      run_once: true

    - name: Tarea 1 - Recolectar datos del sistema
      setup:
      register: resultado_tarea_1
      ignore_unreachable: true
      ignore_errors: true

    - name: Registrar resultado tarea 1 en BBDD
      community.mysql.mysql_query:
        login_host: "{{ db_host }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
        login_db: "{{ db_name }}"
        query: >
          INSERT INTO {{ db_table }} (equipo_id, playbook, playbook_uid, nombre_tarea, correcta, mensaje_error, fecha_ejecucion)
          VALUES (
            {{ hostvars[inventory_hostname].equipo_id | default('NULL') }},
            '{{ playbook_nombre }}',
            '{{ playbook_id }}',
            '{{ tarea_1 }}',
            {{ 0 if resultado_tarea_1.failed | default(false) else 1 }},
            '{{ resultado_tarea_1.msg | default("") }}',
            NOW()
          );
      delegate_to: localhost
      ignore_errors: true

    - name: Tarea 2 - Crear usuario temporal
      ansible.builtin.user:
        name: ansible_temp
        password: "{{ ansible_temp_password }}"
        shell: /bin/bash
        groups: sudo
        append: yes
        state: present
      become: true
      when: resultado_tarea_1 is succeeded
      register: resultado_tarea_2
      ignore_errors: true
      ignore_unreachable: true

    - name: Registrar resultado tarea 2 en BBDD
      community.mysql.mysql_query:
        login_host: "{{ db_host }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
        login_db: "{{ db_name }}"
        query: >
          INSERT INTO {{ db_table }} (equipo_id, playbook, playbook_uid, nombre_tarea, correcta, mensaje_error, fecha_ejecucion)
          VALUES (
            {{ hostvars[inventory_hostname].equipo_id | default('NULL') }},
            '{{ playbook_nombre }}',
            '{{ playbook_id }}',
            '{{ tarea_2 }}',
            {{ 0 if resultado_tarea_2.failed | default(false) else 1 }},
            '{{ resultado_tarea_2.msg | default("") }}',
            NOW()
          );
      delegate_to: localhost
      ignore_errors: true
