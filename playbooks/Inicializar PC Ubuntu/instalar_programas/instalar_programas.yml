- name: Instalar programas de desarrollo
  hosts: pendientes
  gather_facts: no
  become: true

  vars:
    playbook_nombre: "FU05 - instalar_programas"
    tarea_1: "Tarea 1 - Instalar Visual Studio Code"
    tarea_2: "Tarea 2 - Instalar Android Studio"
    tarea_3: "Tarea 3 - Instalar VirtualBox"
    tarea_4: "Tarea 4 - Crear accesos directos"

  tasks:
    - name: Tarea 0 - Generar timestamp único para esta ejecución
      set_fact:
        playbook_id: "{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"
      run_once: true


    - name: Tarea 1.1 - Importar clave y añadir repo VSCode
      block:

        - name: Importar clave GPG de Microsoft para VSCode
          ansible.builtin.apt_key:
            url: https://packages.microsoft.com/keys/microsoft.asc
            state: present
          register: resultado_importar_clave

        - name: Añadir repositorio de Visual Studio Code
          ansible.builtin.apt_repository:
            repo: "deb [arch=amd64] https://packages.microsoft.com/repos/code stable main"
            filename: 'vscode'
            state: present
          register: resultado_anadir_repo

      rescue:
        - name: Mensaje de ayuda si falla la configuración del repositorio de VSCode
          debug:
            msg: "❌ No se pudo añadir el repositorio de Visual Studio Code. Revisa la conexión o la URL del repositorio."

      always:
        - name: Tarea 1.2 - Registrar resultado de la configuración del repositorio en BBDD
          delegate_to: localhost
          become: false
          community.mysql.mysql_query:
            login_db: "{{ db_name }}"
            login_user: "{{ db_user }}"
            login_password: "{{ db_password }}"
            login_host: "{{ db_host }}"
            query: |
              INSERT INTO tasks (
                host_id, playbook, playbook_uid, task_name, is_ok, task_message, help_message, created, modified
              ) VALUES (
                {{ hostvars[inventory_hostname].equipo_id | default('NULL') }},
                '{{ playbook_nombre }}',
                '{{ playbook_id }}',
                '{{ tarea_1 }}',
                {{ (resultado_anadir_repo is defined and resultado_anadir_repo.failed | default(false) == false) | int }},
                '{{ resultado_anadir_repo.msg | default("OK") }}',
                '{% if resultado_anadir_repo is not defined or resultado_anadir_repo.failed | default(false) %}Error al añadir el repositorio de VSCode. Verifica la clave o la URL.{% else %}OK{% endif %}',
                now(),
                now()
              )

# ---------- ANDROID STUDIO ----------
    - name: Tarea 2.1 - Descargar Android Studio
      get_url:
        url: "{{ android_studio_url }}"
        dest: /tmp/android-studio.tar.gz
      register: resultado_tarea_2
      ignore_errors: true

    - name: Tarea 2.2 - Instalar dependencias necesarias para Android Studio
      apt:
        name:
          - libc6:i386
          - libncurses5:i386
          - libstdc++6:i386
          - lib32z1
          - libbz2-1.0:i386
        state: present
        update_cache: yes


    - name: Tarea 2.3 - Extraer Android Studio
      unarchive:
        src: /tmp/android-studio.tar.gz
        dest: /opt/
        remote_src: yes
      when: resultado_tarea_2 is succeeded

    - name: Tarea 2.4 - Crear enlace simbólico
      file:
        src: /opt/android-studio/bin/studio.sh
        dest: /usr/local/bin/android-studio
        state: link

    - name: Tarea 2.5 - Eliminar archivo descargado de Android Studio
      file:
        path: /tmp/android-studio.tar.gz
        state: absent
      when: resultado_tarea_2 is succeeded


    - name: Tarea 2.6 - Registrar instalación Android Studio en BBDD
      community.mysql.mysql_query:
        login_host: "{{ db_host }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
        login_db: "{{ db_name }}"
        query: >
          INSERT INTO {{ db_table }} (
            host_id, playbook, playbook_uid, task_name, is_ok, task_message, help_message, created, modified
          ) VALUES (
            {{ hostvars[inventory_hostname].equipo_id | default('NULL') }},
            '{{ playbook_nombre }}',
            '{{ playbook_id }}',
            '{{ tarea_2 }}',
            {{ 0 if resultado_tarea_2.rc is defined and resultado_tarea_2.rc != 0 else 1 }},
            '{{ resultado_tarea_2 | to_json | replace("'", "''") }}',
            'Verifica URL oficial o permisos en /opt.',
            NOW(),
            NOW()
          );
      delegate_to: localhost
      become: false

    # ---------- VIRTUALBOX ----------
    - name: Tarea 3.1 - Instalar dependencias VirtualBox
      apt:
        name:
          - gcc
          - make
          - perl
          - dkms
          - build-essential
          - linux-headers-{{ ansible_kernel }}
        state: present
        update_cache: yes

    - name: Tarea 3.2 - Instalar VirtualBox desde repositorio oficial
      apt:
        name: virtualbox
        state: present
      register: resultado_tarea_3
      ignore_errors: true

    - name: Tarea 3.3 - Registrar instalación VirtualBox en BBDD
      community.mysql.mysql_query:
        login_host: "{{ db_host }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
        login_db: "{{ db_name }}"
        query: >
          INSERT INTO {{ db_table }} (
            host_id, playbook, playbook_uid, task_name, is_ok, task_message, help_message, created, modified
          ) VALUES (
            {{ hostvars[inventory_hostname].equipo_id | default('NULL') }},
            '{{ playbook_nombre }}',
            '{{ playbook_id }}',
            '{{ tarea_3 }}',
            {{ 0 if resultado_tarea_3.rc is defined and resultado_tarea_3.rc != 0 else 1 }},
            '{{ resultado_tarea_3 | to_json | replace("'", "''") }}',
            'Asegúrate de que el repositorio multiverse está activado y kernel headers instalados.',
            NOW(),
            NOW()
          );
      delegate_to: localhost
      become: false


# ---------- ACCESOS DIRECTOS ----------
    - name: Tarea 4.1 - Crear carpeta de accesos directos si no existe
      file:
        path: /home/alumno/.local/share/applications
        state: directory
        owner: alumno
        group: alumno
        mode: '0755'

    - name: Tarea 4.2 - Crear acceso directo a Android Studio
      copy:
        dest: /home/alumno/.local/share/applications/android-studio.desktop
        content: |
          [Desktop Entry]
          Version=1.0
          Type=Application
          Name=Android Studio
          Exec=/usr/local/bin/android-studio
          Icon=/opt/android-studio/bin/studio.png
          Terminal=false
          Categories=Development;IDE;
        owner: alumno
        group: alumno
        mode: '0755'

    - name: Tarea 4.3 - Crear acceso directo a VSCode
      copy:
        dest: /home/alumno/.local/share/applications/vscode.desktop
        content: |
          [Desktop Entry]
          Version=1.0
          Type=Application
          Name=Visual Studio Code
          Exec=/usr/bin/code
          Icon=code
          Terminal=false
          Categories=Development;IDE;
        owner: alumno
        group: alumno
        mode: '0755'

    - name: Tarea 4.4 - Crear acceso directo a VirtualBox
      copy:
        dest: /home/alumno/.local/share/applications/virtualbox.desktop
        content: |
          [Desktop Entry]
          Version=1.0
          Type=Application
          Name=VirtualBox
          Exec=/usr/bin/virtualbox
          Icon=virtualbox
          Terminal=false
          Categories=System;Emulator;Virtualization;
        owner: alumno
        group: alumno
        mode: '0755'

